stages:
  - prepare
  - checks
  - build
  - test
  - analyze
  - deploy

variables:
  CC: gcc
  CXX: g++
  GIT_SUBMODULE_STRATEGY: recursive

image: ins-cpp:10

libraries:
  stage: prepare
  before_script:
    - apt update
    - apt -y install build-essential cmake python3-pip
    - pip3 install conan
    - conan --version
    - cmake --version
    - clang++ --version
  script:
    - cmake -Bbuild/Debug -S. -DCMAKE_BUILD_TYPE=Debug -DENABLE_MAIN=OFF -DENABLE_GUI=OFF -DENABLE_TESTING=OFF -DENABLE_DOXYGEN=OFF -DLOG_LEVEL=TRACE -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=OFF -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
    - cmake -Bbuild/Release -S. -DCMAKE_BUILD_TYPE=Release -DENABLE_MAIN=OFF -DENABLE_GUI=OFF -DENABLE_TESTING=OFF -DENABLE_DOXYGEN=OFF -DLOG_LEVEL=TRACE -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=OFF -DENABLE_INCLUDE_WHAT_YOU_USE=OFF

clang-tidy:
  stage: checks
  needs: ["libraries"]
  before_script:
    - apt update
    - apt -y install build-essential cmake clang-tidy-10 python3-pip qtbase5-dev
    - pip3 install conan
    - conan --version
    - cmake --version
    - clang-tidy --version
  script:
    - cmake -Bbuild/Release -S. -DCMAKE_BUILD_TYPE=Release -DENABLE_MAIN=ON -DENABLE_GUI=ON -DENABLE_TESTING=OFF -DENABLE_DOXYGEN=OFF -DLOG_LEVEL=TRACE -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=ON -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
    - cmake --build build/Release --target copy-compile-commands
    - clang-tidy --extra-arg=-Wno-unknown-warning-option $(find src -type f -name "*.cpp")

clang-tidy-tests:
  stage: checks
  needs: ["libraries"]
  before_script:
    - apt update
    - apt -y install build-essential cmake clang-tidy-10 python3-pip qtbase5-dev
    - pip3 install conan
    - conan --version
    - cmake --version
    - clang-tidy --version
  script:
    - cmake -Bbuild/Debug -S. -DCMAKE_BUILD_TYPE=Debug -DENABLE_MAIN=OFF -DENABLE_GUI=OFF -DENABLE_TESTING=ON -DENABLE_DOXYGEN=OFF -DLOG_LEVEL=TRACE -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=ON -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
    - cmake --build build/Debug --target copy-compile-commands
    - clang-tidy --extra-arg=-Wno-unknown-warning-option $(find test -type f -name "*.cpp")

build-clang:
  stage: build
  needs: ["libraries"]
  inherit:
    variables: false
  variables:
    CC: clang
    CXX: clang++
  before_script:
    - apt update
    - apt -y install build-essential cmake clang-10 python3-pip ccache qtbase5-dev
    - pip3 install conan
    - conan --version
    - clang++ --version
    - cmake --version
  script:
    - cmake -Bbuild/Release -S. -DCMAKE_BUILD_TYPE=Release -DENABLE_MAIN=ON -DENABLE_GUI=ON -DENABLE_TESTING=OFF -DENABLE_DOXYGEN=OFF -DLOG_LEVEL=TRACE -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=OFF -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
    - cmake --build build/Release -- -j2

build-gcc:
  stage: build
  needs: ["libraries"]
  before_script:
    - apt update
    - apt -y install build-essential cmake python3-pip ccache qtbase5-dev
    - pip3 install conan
    - conan --version
    - g++ --version
    - cmake --version
  script:
    - cmake -Bbuild/Release -S. -DCMAKE_BUILD_TYPE=Release -DENABLE_MAIN=ON -DENABLE_GUI=ON -DENABLE_TESTING=OFF -DENABLE_DOXYGEN=OFF -DLOG_LEVEL=TRACE -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=OFF -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
    - cmake --build build/Release -- -j2

build-tests:
  stage: build
  needs: ["libraries"]
  before_script:
    - apt update
    - apt -y install build-essential cmake python3-pip ccache qtbase5-dev
    - pip3 install conan
    - conan --version
    - g++ --version
    - cmake --version
  script:
    - cmake -Bbuild/Debug -S. -DCMAKE_BUILD_TYPE=Debug -DENABLE_MAIN=OFF -DENABLE_GUI=OFF -DENABLE_TESTING=ON -DENABLE_DOXYGEN=OFF -DENABLE_COVERAGE=TRUE -DLOG_LEVEL=TRACE -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=OFF -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
    - cmake --build build/Debug -- -j2
  artifacts:
    untracked: true
    expire_in: 20min

run-tests:
  stage: test
  needs:
    - build-tests
  script:
    - cd build/Debug/test
    - ctest -j2 --output-on-failure
  artifacts:
    untracked: true
    expire_in: 20min
    
doxygen:
  stage: analyze
  needs: []
  before_script:
    - apt update
    - apt -y install build-essential cmake clang-10 python3-pip ccache doxygen graphviz
    - pip3 install conan
    - conan --version
    - clang++ --version
    - cmake --version
    - doxygen --version
  script:
    - cmake -Bbuild/Release -S. -DCMAKE_BUILD_TYPE=Release -DENABLE_MAIN=OFF -DENABLE_GUI=OFF -DENABLE_TESTING=OFF -DENABLE_DOXYGEN=ON -DENABLE_CPPCHECK=OFF -DENABLE_CLANG_TIDY=OFF -DENABLE_INCLUDE_WHAT_YOU_USE=OFF
    - cmake --build build/Release --target doxygen-docs -- -j2
  artifacts:
    paths:
      - doc/html/
    expire_in: 20min
  only:
    - master

coverage:
  stage: analyze
  needs:
    - run-tests
  before_script:
    - apt update
    - apt -y install lcov
    - lcov --version
    - genhtml --version
    - gcov --version
  script:
    - mkdir -p coverage
    - lcov --gcov-tool gcov --capture --no-external --directory . --output-file coverage/coverage_all.info
    - lcov --remove coverage/coverage_all.info $(pwd)'/lib/*' $(pwd)'/test/*' --output-file coverage/coverage.info
    - genhtml coverage/coverage.info --output-directory coverage
    - lcov --list coverage/coverage.info
    - python3 tools/lcov_cobertura.py coverage/coverage.info --output coverage/cobertura-coverage.xml
  coverage: '/Total:\| ?(\d+\.?\d+\%)/'
  artifacts:
    paths:
      - coverage/
    expire_in: 20min
    reports:
      cobertura: coverage/cobertura-coverage.xml

pages:
  stage: deploy
  needs:
    - doxygen
    - coverage
  script:
    - mv doc/html/ public/
    - mv coverage/ public/coverage/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master